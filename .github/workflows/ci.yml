on:
  push:
    branches:
      - 'appium-flutter-driver'

jobs:
  test:
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [29]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # - name: Gradle cache
      #   uses: gradle/gradle-build-action@v2
        
      # - name: AVD cache
      #   uses: actions/cache@v2
      #   id: avd-cache
      #   with:
      #     path: |
      #       ~/.android/avd/*
      #       ~/.android/adb*
      #     key: avd-${{ matrix.api-level }}

      # - name: Create AVD and generate snapshot for caching
      #   if: steps.avd-cache.outputs.cache-hit != 'true'
      #   uses: reactivecircus/android-emulator-runner@v2
      #   with:
      #     api-level: ${{ matrix.api-level }}
      #     force-avd-creation: false
      #     emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
      #     disable-animations: false
      #     script: echo "Generated AVD snapshot for caching."
      
      - name: Checkout tests
        uses: actions/checkout@v3
        with:
          repository: FerreiraJo/appium-flutter-driver-example
          token: ${{ secrets.ACCESS_TOKEN }}
          path: appium-flutter-driver-example
      
      # - name: Flutter cache
      #   uses: actions/cache@v2
      #   id: flutter
      #   with:
      #     path: |
      #       ${{ runner.tool_cache }}/flutter
      #     key: flutter

      # - name: Build project
      #   uses: subosito/flutter-action@v2
      #   with:
      #     flutter-version: '2.5.1'
      #     channel: 'stable'
      #     # cache: true
      #     # cache-key: flutter # optional, change this to force refresh cache
      #     # cache-path: ${{ runner.tool_cache }}/flutter # optional, change this to specify the cache pyyath
      # # - run: ls
      # - run: flutter pub get
      # - run: flutter build apk --debug
      
      #### Install Appium #####
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      # - name: Node cache 
      #   uses: actions/cache@v2
      #   id: node-cache
      #   with:
      #     path: ~/.npm
      #     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-node-

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn

      - name: Setup node
        # if: steps.node-cache.outputs.cache-hit != 'true'
        uses: actions/setup-node@v2
        with:
          node-version: '12'
          cache: 'yarn'
          # cache-dependency-path: /Users/runner/hostedtoolcache/clean-flutter-app/appium-flutter-driver-example/yarn.lock
      - run: ls
      - run: cd appium-flutter-driver-example/ && yarn install
        # if: steps.yarn-cache.outputs.cache-hit != 'true'

      - run: cd appium-flutter-driver-example/ && yarn appium &
      # - run: npm install -g appium@1.22.1
      # - run: npm install -g appium-flutter-driver
      - run: cd appium-flutter-driver-example/ ls

      ### Install RUBY #####
      # - name: Setup Ruby
      #   uses: ruby/setup-ruby@v1
      #   with:
      #     working-directory: appium-flutter-driver-example/
      #     ruby-version: 2.7.3
      #     bundler-cache: true 
      # # - run: cd appium-flutter-driver-example/

      # - run: ls && cd appium-flutter-driver-example/ && ls && bundle exec rake --tasks && bundle exec rake run_acceptance[android,@regression]

      # - name: Run tests
      #   uses: reactivecircus/android-emulator-runner@v2
      #   with:
      #     api-level: ${{ matrix.api-level }}
      #     force-avd-creation: false
      #     emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
      #     disable-animations: true
      #     script: ls && cd appium-flutter-driver-example/ && ls && bundle exec rake --tasks && bundle exec rake run_acceptance[android,@regression]

