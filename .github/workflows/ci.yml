# on:
#   push:
#     branches:
#       - 'appium-flutter-driver'

# jobs:
#   test:
#     runs-on: macos-latest
#     strategy:
#       matrix:
#         api-level: [29]
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3

#       - name: Gradle cache
#         uses: gradle/gradle-build-action@v2
        
#       - name: AVD cache
#         if: always()
#         uses: actions/cache@v3
#         id: avd-cache
#         with:
#           path: |
#             ~/.android/avd/*
#             ~/.android/adb*
#           key: avd-${{ matrix.api-level }}

#       - name: Create AVD and generate snapshot for caching
#         if: steps.avd-cache.outputs.cache-hit != 'true'
#         uses: reactivecircus/android-emulator-runner@v2
#         with:
#           api-level: ${{ matrix.api-level }}
#           force-avd-creation: false
#           emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
#           disable-animations: false
#           script: echo "Generated AVD snapshot for caching."
      
#       - name: Checkout tests
#         uses: actions/checkout@v3
#         with:
#           repository: FerreiraJo/appium-flutter-driver-example
#           token: ${{ secrets.ACCESS_TOKEN }}
#           path: appium-flutter-driver-example
      

#       - name: Flutter
#         uses: subosito/flutter-action@v2
#         with:
#           flutter-version: '2.5.1'
#           channel: 'stable'
#           # cache: true
#           # cache-key: flutter # optional, change this to force refresh cache
#           # cache-path: ${{ runner.tool_cache }}/flutter # optional, change this to specify the cache pyyath
#       - run: flutter pub get
#       - run: flutter build apk --debug
      
#       #### Install Appium #####
#       - name: Get yarn cache directory path
#         id: yarn-cache-dir-path
#         run: echo "::set-output name=dir::$(yarn cache dir)"

#       - name: Yarn Cache
#         uses: actions/cache@v3
#         id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
#         with:
#           path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
#           key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-yarn

#       - name: Setup node
#         if: always()
#         uses: actions/setup-node@v2
#         with:
#           node-version: '12'
#           cache: 'yarn'
#           cache-dependency-path: ./appium-flutter-driver-example/
#       - run: cd appium-flutter-driver-example/ && yarn install
#       - run: cd appium-flutter-driver-example/ && yarn appium &


#       ## Install RUBY #####
#       - name: Setup Ruby
#         if: always()
#         uses: ruby/setup-ruby@v1
#         with:
#           working-directory: appium-flutter-driver-example/
#           ruby-version: 2.7.3
#           bundler-cache: true 

#       - name: Run tests
#         uses: reactivecircus/android-emulator-runner@v2
#         with:
#           api-level: ${{ matrix.api-level }}
#           force-avd-creation: false
#           emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
#           disable-animations: true
#           script: ls && cd appium-flutter-driver-example/ && ls && bundle exec rake --tasks && bundle exec rake run_acceptance[android,@regression]

